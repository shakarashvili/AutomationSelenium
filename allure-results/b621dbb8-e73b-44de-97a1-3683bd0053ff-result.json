{"uuid":"b621dbb8-e73b-44de-97a1-3683bd0053ff","historyId":"9bbf5b3b618f6aee82f6d7b177f98cda","fullName":"RestAssuredTests.RestAssuredRun.testGetResquest","labels":[{"name":"package","value":"RestAssuredTests.RestAssuredRun"},{"name":"testClass","value":"RestAssuredTests.RestAssuredRun"},{"name":"testMethod","value":"testGetResquest"},{"name":"parentSuite","value":"Default Suite"},{"name":"suite","value":"AutomationExerciesTest"},{"name":"subSuite","value":"RestAssuredTests.RestAssuredRun"},{"name":"host","value":"WIN-PN8O8BN2EC4"},{"name":"thread","value":"17152@WIN-PN8O8BN2EC4.main(1)"},{"name":"framework","value":"testng"},{"name":"language","value":"java"}],"links":[],"name":"testGetResquest","status":"failed","statusDetails":{"known":false,"muted":false,"flaky":false,"message":"1 expectation failed.\nXML path userId doesn't match.\nExpected: <1>\n  Actual: <nullnullnullnullJSONPlaceholder - Free Fake REST APInull\n      window.dataLayer = window.dataLayer || []\n      function gtag() {\n        dataLayer.push(arguments)\n      }\n      gtag('js', new Date())\n\n      gtag('config', 'G-E3C3GCQVBN')\n    nullJSONPlaceholderGuideSponsor this projectBlogMy JSON Server{JSON} Placeholder\nFree fake and reliable API for testing and prototyping.\nJSON ServerLowDBServing ~3 billion requests each monthSponsorsSponsorsnullnullYour company logo hereTry itRun this code here, in a console or from any site:fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => response.json())\n      .then(json => console.log(json))\nRun script\n{}\nCongrats! You've made your first call to JSONPlaceholder. \uD83D\uDE03 \uD83C\uDF89\nnullWhen to usewhenever you need some fake dataResourcesJSONPlaceholder comes with a set of 6 common resources:nullnull/posts100 posts/comments500 comments/albums100 albums/photos5000 photos/todos200 todos/users10 usersNoteguideRoutesAll HTTP methods are supported. You can use http or https for your requests.nullnullGET/postsGET/posts/1GET/posts/1/commentsGET/comments?postId=1POST/postsPUT/posts/1PATCH/posts/1DELETE/posts/1NoteguideUse your own dataMockend\n  // Use http or https based on location.protocol\n  var example = document.getElementById('example')\n  example.textContent = example.textContent.replace('http:', location.protocol)\n\n  // Highlight result element\n  var result = document.getElementById('result')\n\n  // Run example\n  var runButton = document.getElementById('run-button')\n  runButton.onclick = function () {\n    var root = location.protocol + '//jsonplaceholder.typicode.com'\n    var runMessage = document.getElementById('run-message')\n\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then((response) => response.json())\n      .then((json) => {\n        var str = JSON.stringify(json, null, '  ')\n\n        // Format result\n        result.innerHTML = Prism.highlight(\n          str,\n          Prism.languages.javascript,\n          'javascript'\n        )\n\n        runMessage.className = ''\n      })\n  }\nYou can sponsor this project (and others) on GitHubtypicodenull>\n","trace":"java.lang.AssertionError: 1 expectation failed.\nXML path userId doesn't match.\nExpected: <1>\n  Actual: <nullnullnullnullJSONPlaceholder - Free Fake REST APInull\n      window.dataLayer = window.dataLayer || []\n      function gtag() {\n        dataLayer.push(arguments)\n      }\n      gtag('js', new Date())\n\n      gtag('config', 'G-E3C3GCQVBN')\n    nullJSONPlaceholderGuideSponsor this projectBlogMy JSON Server{JSON} Placeholder\nFree fake and reliable API for testing and prototyping.\nJSON ServerLowDBServing ~3 billion requests each monthSponsorsSponsorsnullnullYour company logo hereTry itRun this code here, in a console or from any site:fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then(response => response.json())\n      .then(json => console.log(json))\nRun script\n{}\nCongrats! You've made your first call to JSONPlaceholder. \uD83D\uDE03 \uD83C\uDF89\nnullWhen to usewhenever you need some fake dataResourcesJSONPlaceholder comes with a set of 6 common resources:nullnull/posts100 posts/comments500 comments/albums100 albums/photos5000 photos/todos200 todos/users10 usersNoteguideRoutesAll HTTP methods are supported. You can use http or https for your requests.nullnullGET/postsGET/posts/1GET/posts/1/commentsGET/comments?postId=1POST/postsPUT/posts/1PATCH/posts/1DELETE/posts/1NoteguideUse your own dataMockend\n  // Use http or https based on location.protocol\n  var example = document.getElementById('example')\n  example.textContent = example.textContent.replace('http:', location.protocol)\n\n  // Highlight result element\n  var result = document.getElementById('result')\n\n  // Run example\n  var runButton = document.getElementById('run-button')\n  runButton.onclick = function () {\n    var root = location.protocol + '//jsonplaceholder.typicode.com'\n    var runMessage = document.getElementById('run-message')\n\n    fetch('https://jsonplaceholder.typicode.com/todos/1')\n      .then((response) => response.json())\n      .then((json) => {\n        var str = JSON.stringify(json, null, '  ')\n\n        // Format result\n        result.innerHTML = Prism.highlight(\n          str,\n          Prism.languages.javascript,\n          'javascript'\n        )\n\n        runMessage.className = ''\n      })\n  }\nYou can sponsor this project (and others) on GitHubtypicodenull>\n\r\n\tat java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:62)\r\n\tat java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:502)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:486)\r\n\tat org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)\r\n\tat org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)\r\n\tat io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$1.call(Unknown Source)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)\r\n\tat org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:270)\r\n\tat io.restassured.specification.ResponseSpecification$body$1.callCurrent(Unknown Source)\r\n\tat org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallCurrent(CallSiteArray.java:49)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:171)\r\n\tat org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:212)\r\n\tat io.restassured.internal.ResponseSpecificationImpl.body(ResponseSpecificationImpl.groovy:117)\r\n\tat io.restassured.internal.ValidatableResponseOptionsImpl.body(ValidatableResponseOptionsImpl.java:244)\r\n\tat RestAssuredTests.RestAssuredRun.testGetResquest(RestAssuredRun.java:22)\r\n\tat java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:580)\r\n\tat org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)\r\n\tat org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)\r\n\tat org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)\r\n\tat org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)\r\n\tat org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)\r\n\tat org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)\r\n\tat java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\r\n\tat org.testng.TestRunner.privateRun(TestRunner.java:739)\r\n\tat org.testng.TestRunner.run(TestRunner.java:614)\r\n\tat org.testng.SuiteRunner.runTest(SuiteRunner.java:421)\r\n\tat org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)\r\n\tat org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)\r\n\tat org.testng.SuiteRunner.run(SuiteRunner.java:312)\r\n\tat org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)\r\n\tat org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)\r\n\tat org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)\r\n\tat org.testng.TestNG.runSuitesLocally(TestNG.java:1208)\r\n\tat org.testng.TestNG.runSuites(TestNG.java:1112)\r\n\tat org.testng.TestNG.run(TestNG.java:1079)\r\n\tat com.intellij.rt.testng.IDEARemoteTestNG.run(IDEARemoteTestNG.java:65)\r\n\tat com.intellij.rt.testng.RemoteTestNGStarter.main(RemoteTestNGStarter.java:105)\r\n"},"stage":"finished","steps":[],"attachments":[],"parameters":[],"start":1719934659047,"stop":1719934663850}